{"version":3,"file":"static/js/825.9dc59c41.chunk.js","mappings":"qQACA,GAAgB,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,sB,SCKjKA,EAAQ,QAEDC,EAAS,WACpB,OAA4BC,EAAAA,EAAAA,UAAmB,IAA/C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAIT,IAEpCU,EAAAA,EAAAA,YAAU,WACHF,IAILG,EAAAA,EAAAA,IAAqBH,GAAYI,KAAKR,EACvC,GAAE,CAACI,IAUJ,OACE,iCACE,iBAAKK,UAAWC,EAAAA,UAAhB,WACE,kBAAMC,SAXS,SAACC,GACpBA,EAAMC,iBAEN,ICxBoCC,EAAKC,EAAKC,EDwBxCC,EAAOL,EAAMM,OACnBf,GCzBoCW,EDyBpB,GCzByBC,EDyBtBnB,ECzB2BoB,EDyBnBC,EAAKE,SAASC,MAAMJ,MCxB7CD,KAAOD,EACTO,OAAOC,eAAeR,EAAKC,EAAK,CAC9BC,MAAOA,EACPO,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZX,EAAIC,GAAOC,EAGNF,IDcLG,EAAKS,OACN,EAKmCjB,UAAWC,EAAAA,KAAzC,WACE,kBAAOiB,KAAK,OAAOC,KAAMhC,EAAOa,UAAWC,EAAAA,SAC3C,mBAAQiB,KAAK,SAAb,wBAGF,eAAIlB,UAAWC,EAAAA,KAAf,SACGX,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,cAAvB,OACV,eAAavB,UAAWC,EAAAA,KAAxB,UACE,UAAC,KAAD,CAAMuB,GAAE,UAAKH,GAAMrB,UAAWC,EAAAA,KAA9B,WACE,0BAAOqB,KACP,gBACEG,IAAG,yCAAoCF,GACvCG,IAAG,UAAKJ,EAAL,iBALAD,EADC,UAchB,SAAC,KAAD,MAGL,EAED,G,+KEvDMM,EAAM,mCACCC,EAAoB,WAC/B,OAAOC,IAAAA,IAAA,gEACoDF,GAE5D,EAEYG,EAAsB,SAACT,GAClC,OAAOQ,IAAAA,IAAA,6CACsCR,EADtC,oBACoDM,IACxD5B,MAAK,SAACgC,GAAD,OAAcA,EAASC,IAAvB,GACT,EAEYC,EAAc,SAACZ,GAC1B,OAAOQ,IAAAA,IAAA,6CACsCR,EADtC,4BAC4DM,IAChE5B,MAAK,SAACgC,GAAD,OAAcA,EAASC,KAAKE,IAA5B,GACT,EAEYC,EAAiB,SAACd,GAC7B,OAAOQ,IAAAA,IAAA,6CACsCR,EADtC,4BAC4DM,IAChE5B,MAAK,SAACgC,GAAD,OAAcA,EAASC,KAAKI,OAA5B,GACT,EAEYtC,EAAuB,SAACuC,GACnC,OAAOR,IAAAA,IAAA,4DAGyCQ,EAHzC,oBAG4DV,IAEhE5B,MAAK,SAACgC,GAAD,OAAcA,EAASC,KAAKI,OAA5B,GACT,C","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.scss?f7cd","components/Movies/Movies.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","service/Api.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__OyJhg\",\"label\":\"Movies_label__xlkHR\",\"input\":\"Movies_input__Qd55L\",\"list\":\"Movies_list__6gCAB\",\"item\":\"Movies_item__sKESO\",\"link\":\"Movies_link__4OB43\"};","import { searchMovieByKeyword } from '../../service/Api';\nimport { useState, useEffect } from 'react';\nimport { Link, Outlet, useSearchParams } from 'react-router-dom';\nimport styles from './Movies.module.scss';\nimport { TMovie } from '../movies.types';\n\nconst QUERY = 'query';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState<TMovie[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const eventsName = searchParams.get(QUERY);\n\n  useEffect(() => {\n    if (!eventsName) {\n      return;\n    }\n\n    searchMovieByKeyword(eventsName).then(setMovies);\n  }, [eventsName]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.target;\n    setSearchParams({ [QUERY]: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <input type=\"text\" name={QUERY} className={styles.input} />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <ul className={styles.list}>\n          {movies.map(({ id, original_title, backdrop_path }) => (\n            <li key={id} className={styles.item}>\n              <Link to={`${id}`} className={styles.link}>\n                <span>{original_title}</span>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n                  alt={`${original_title} poster`}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movies;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import axios from 'axios';\n\nconst KEY = '46f3b9dca981eed2c173014155e3a7a9';\nexport const getTrendingMovies = () => {\n  return axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n};\n\nexport const getMovieDetailsById = (id) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    .then((response) => response.data);\n};\n\nexport const getCastById = (id) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`)\n    .then((response) => response.data.cast);\n};\n\nexport const getReviewsById = (id) => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}`)\n    .then((response) => response.data.results);\n};\n\nexport const searchMovieByKeyword = (keyword) => {\n  return axios\n    .get(\n      `\nhttps://api.themoviedb.org/3/search/movie?query=${keyword}&api_key=${KEY}`\n    )\n    .then((response) => response.data.results);\n};\n"],"names":["QUERY","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","eventsName","get","useEffect","searchMovieByKeyword","then","className","styles","onSubmit","event","preventDefault","obj","key","value","form","target","elements","query","Object","defineProperty","enumerable","configurable","writable","reset","type","name","map","id","original_title","backdrop_path","to","src","alt","KEY","getTrendingMovies","axios","getMovieDetailsById","response","data","getCastById","cast","getReviewsById","results","keyword"],"sourceRoot":""}