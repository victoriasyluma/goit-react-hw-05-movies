{"version":3,"file":"static/js/352.1a8926f9.chunk.js","mappings":"qQACA,GAAgB,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,sB,SCKjKA,EAAQ,QAEDC,EAAS,WACpB,OAA4BC,EAAAA,EAAAA,UAAmB,IAA/C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAiB,IAA3C,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAIX,GAC9BY,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAILK,EAAAA,EAAAA,IAAqBL,GAAYM,KAAKZ,EACvC,GAAE,CAACM,IAeJ,OACE,iCACE,iBAAKO,UAAWC,EAAAA,UAAhB,WACE,kBAAMC,SAdS,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OACnBd,EC7BW,SAAyBe,EAAKC,EAAKpB,GAYhD,OAXIoB,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BpB,MAAOA,EACPuB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOpB,EAGNmB,CACT,CDgBoB,IAAGxB,EAAQsB,EAAKS,SAASC,MAAM3B,QAC/CiB,EAAKW,QAGL3B,EAAS,GACV,EAKmCW,UAAWC,EAAAA,KAAzC,WACE,kBACEgB,KAAK,OACLC,KAAMnC,EACNiB,UAAWC,EAAAA,MACXb,MAAOA,EACP+B,QAtBM,SAACC,GAAD,OAAO/B,EAAS+B,EAAEd,OAAOlB,MAAzB,KAwBR,mBAAQ6B,KAAK,SAASI,UAAWjC,EAAjC,wBAKF,eAAIY,UAAWC,EAAAA,KAAf,SACGf,EAAOoC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,cAAvB,OACV,eAAazB,UAAWC,EAAAA,KAAxB,UACE,UAAC,KAAD,CACEyB,GAAE,UAAKH,GACPI,MAAO,CAAEC,KAAMjC,GACfK,UAAWC,EAAAA,KAHb,WAKE,0BAAOuB,KACP,gBACEK,IAAG,yCAAoCJ,GACvCK,IAAG,UAAKN,EAAL,iBATAD,EADC,UAkBhB,SAAC,KAAD,MAGL,EAED,G,+KE1EMQ,EAAM,mCACNC,EAAO,gCAEAC,EAAoB,WAC/B,OAAOC,IAAAA,IAAA,UAAaF,EAAb,oCAA6CD,GACrD,EAEYI,EAAsB,SAACZ,GAClC,OAAOW,IAAAA,IAAA,UACGF,EADH,iBACgBT,EADhB,oBAC8BQ,IAClChC,MAAK,SAACqC,GAAD,OAAcA,EAASC,IAAvB,GACT,EAEYC,EAAc,SAACf,GAC1B,OAAOW,IAAAA,IAAA,UACGF,EADH,iBACgBT,EADhB,4BACsCQ,IAC1ChC,MAAK,SAACqC,GAAD,OAAcA,EAASC,KAAKE,IAA5B,GACT,EAEYC,EAAiB,SAACjB,GAC7B,OAAOW,IAAAA,IAAA,UACGF,EADH,iBACgBT,EADhB,4BACsCQ,IAC1ChC,MAAK,SAACqC,GAAD,OAAcA,EAASC,KAAKI,OAA5B,GACT,EAEY3C,EAAuB,SAAC4C,GACnC,OAAOR,IAAAA,IAAA,UACGF,EADH,8BAC6BU,EAD7B,oBACgDX,IACpDhC,MAAK,SAACqC,GAAD,OAAcA,EAASC,KAAKI,OAA5B,GACT,C","sources":["webpack://react-homework-template/./src/pages/MoviesSearchPage/Movies.module.scss?f7ef","pages/MoviesSearchPage/Movies.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","service/Api.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__GUu8Y\",\"label\":\"Movies_label__hSWXw\",\"input\":\"Movies_input__bQntn\",\"list\":\"Movies_list__2vz-1\",\"item\":\"Movies_item__6ZbO6\",\"link\":\"Movies_link__CNArN\"};","import { searchMovieByKeyword } from '../../service/Api';\nimport { useState, useEffect } from 'react';\nimport { Link, Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport styles from './Movies.module.scss';\nimport { TMovie } from '../../components/movies.types';\n\nconst QUERY = 'query';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState<TMovie[]>([]);\n  const [value, setValue] = useState<string>('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const eventsName = searchParams.get(QUERY);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!eventsName) {\n      return;\n    }\n\n    searchMovieByKeyword(eventsName).then(setMovies);\n  }, [eventsName]);\n\n  const onInput = (e) => setValue(e.target.value);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.target;\n    setSearchParams({ [QUERY]: form.elements.query.value });\n    form.reset();\n\n    // Clear the text state\n    setValue('');\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <input\n            type=\"text\"\n            name={QUERY}\n            className={styles.input}\n            value={value}\n            onInput={onInput}\n          />\n          <button type=\"submit\" disabled={!value}>\n            Search\n          </button>\n        </form>\n\n        <ul className={styles.list}>\n          {movies.map(({ id, original_title, backdrop_path }) => (\n            <li key={id} className={styles.item}>\n              <Link\n                to={`${id}`}\n                state={{ from: location }}\n                className={styles.link}\n              >\n                <span>{original_title}</span>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n                  alt={`${original_title} poster`}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movies;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import axios from 'axios';\n\nconst KEY = '46f3b9dca981eed2c173014155e3a7a9';\nconst BASE = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE}trending/all/day?api_key=${KEY}`);\n};\n\nexport const getMovieDetailsById = (id) => {\n  return axios\n    .get(`${BASE}movie/${id}?api_key=${KEY}`)\n    .then((response) => response.data);\n};\n\nexport const getCastById = (id) => {\n  return axios\n    .get(`${BASE}movie/${id}/credits?api_key=${KEY}`)\n    .then((response) => response.data.cast);\n};\n\nexport const getReviewsById = (id) => {\n  return axios\n    .get(`${BASE}movie/${id}/reviews?api_key=${KEY}`)\n    .then((response) => response.data.results);\n};\n\nexport const searchMovieByKeyword = (keyword) => {\n  return axios\n    .get(`${BASE}search/movie?query=${keyword}&api_key=${KEY}`)\n    .then((response) => response.data.results);\n};\n"],"names":["QUERY","Movies","useState","movies","setMovies","value","setValue","useSearchParams","searchParams","setSearchParams","eventsName","get","location","useLocation","useEffect","searchMovieByKeyword","then","className","styles","onSubmit","event","preventDefault","form","target","obj","key","Object","defineProperty","enumerable","configurable","writable","elements","query","reset","type","name","onInput","e","disabled","map","id","original_title","backdrop_path","to","state","from","src","alt","KEY","BASE","getTrendingMovies","axios","getMovieDetailsById","response","data","getCastById","cast","getReviewsById","results","keyword"],"sourceRoot":""}